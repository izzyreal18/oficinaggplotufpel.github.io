[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Oficina ggplot2 UFPel",
    "section": "",
    "text": "O ggplot2 é um pacote de código aberto para a visualização gráfica de dados para a linguagem de programação R. Foi criada por Hadley Wickham em 2005, sendo uma implementação do livro Grammar Graphics de Leland Wilkison também lançado em 2005.\nEle aborda que visualização gráfica dos dados pode ser divida em componentes semânticos, como escalas e camadas.\n\n\n\nAlta costumização gráfica.\nAlta diversidade de modelos de gráficos.\nIntegração com outros pacotes do tidyverse, como por exemplo dplyr, forcats e o plotly.\nCriação de gráficos a partir de camadas, podendo sobrepor diferentes gráficos.\n\n\n\n\n\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n\n#instalando pacote ggplot2\ninstall.packages(\"ggplot2\")\n\n#instalando dplyr, forcats e patchwork\ninstall.packages(\"dplyr\")\ninstall.packages(\"forcats\")\ninstall.packages(\"patchwork\")\n\nPara usar o ggplot2 em seus scripts tem que carrega-lo\n\n#Carregando o pacote ggplot2\nlibrary(ggplot2)\n\n#Carregando dplyr, forcats e patchwork\nlibrary(dplyr)\nlibrary(forcats)\nlibrary(patchwork)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#por-que-usar-o-ggplot2",
    "href": "index.html#por-que-usar-o-ggplot2",
    "title": "Oficina ggplot2 UFPel",
    "section": "",
    "text": "Alta costumização gráfica.\nAlta diversidade de modelos de gráficos.\nIntegração com outros pacotes do tidyverse, como por exemplo dplyr, forcats e o plotly.\nCriação de gráficos a partir de camadas, podendo sobrepor diferentes gráficos."
  },
  {
    "objectID": "index.html#como-instalar-o-ggplot2",
    "href": "index.html#como-instalar-o-ggplot2",
    "title": "Oficina ggplot2 UFPel",
    "section": "",
    "text": "options(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n\n#instalando pacote ggplot2\ninstall.packages(\"ggplot2\")\n\n#instalando dplyr, forcats e patchwork\ninstall.packages(\"dplyr\")\ninstall.packages(\"forcats\")\ninstall.packages(\"patchwork\")\n\nPara usar o ggplot2 em seus scripts tem que carrega-lo\n\n#Carregando o pacote ggplot2\nlibrary(ggplot2)\n\n#Carregando dplyr, forcats e patchwork\nlibrary(dplyr)\nlibrary(forcats)\nlibrary(patchwork)"
  },
  {
    "objectID": "index.html#mudando-cores-de-preenchimento-no-ggplot",
    "href": "index.html#mudando-cores-de-preenchimento-no-ggplot",
    "title": "Oficina ggplot2 UFPel",
    "section": "Mudando cores de preenchimento no ggplot",
    "text": "Mudando cores de preenchimento no ggplot\nUma das formas de acrescentar cor ao gráfico é adicionando o argumento fill dentro da função aes(). Indicará ao ggplot que você quer que as cores de preenchimentos do ggplot mude de acordo com alguma variável de seu data frame.\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()\n\n\n\n\n\n\n\n\nHá várias maneiras de fazer isso, irei demonstrar algumas ao longo da oficina.\nPor exemplo na linha de código abaixo foi acrescentado o argumento fill dentro da função geom_boxplot().Nesse argumento usei a função de contatenar (c()), para denominar as três cores desejadas para o gráfico. Note que os nomes das cores estão escritos entre aspas ““. Ao invés de colocar nome de cores em inglês, pode-se colocar o código RGB hexadecimal da cor, como #4287f5.\nAtenção se queremos que as cores sejam diferenciadas de acordo com algum fator, ou variável nominal de nosso data.frame, temos que indicar dentro do aes(). Como fill para mudar o preenchimento, colour para mudar o contorno, e shape para mudar formato (caso esteja trabalhando com gráficos possuem pontos).\nNote: quando colocamos as cores escolhidas dentro da forma geométrica (geom_), não será gerado legenda.\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length))+geom_boxplot(fill=c(\"lightpink\",\"lightgreen\",\"lightblue\"))\n\n\n\n\n\n\n\n\nA outra forma é delimitar através da função scale_fill_manual(), esse comando serve para alterar os parâmetros de fill. Nele foi utilizado values = c() para concatenar as cores escolhidas.\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+scale_fill_manual(values=c(\"#704c41\",\"#41704f\",\"#584170\"))"
  },
  {
    "objectID": "index.html#mudando-cores-de-contorno-no-ggplot",
    "href": "index.html#mudando-cores-de-contorno-no-ggplot",
    "title": "Oficina ggplot2 UFPel",
    "section": "Mudando cores de contorno no ggplot",
    "text": "Mudando cores de contorno no ggplot\nO mesmo processo poderia ser feito igual ao fill, porém utilizando o comando color. Esse paramêtro também pode ser utilizado para diferenciar algunciar algum fator do data frame, apenas colocando dentro do aes(color=\"coluna do data.frame\"). Nesse caso foi colocado dentro da função geom_boxplot(), e coloquei o contorno do boxplot na cor marrom.\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot(fill=c(\"lightblue\",\"lightgreen\",\"lightpink\"), color=\"brown\")"
  },
  {
    "objectID": "index.html#alterando-elementos-textuais-no-ggplot",
    "href": "index.html#alterando-elementos-textuais-no-ggplot",
    "title": "Oficina ggplot2 UFPel",
    "section": "Alterando elementos textuais no ggplot",
    "text": "Alterando elementos textuais no ggplot\nOs nomes dos eixos são alterados pela função labs, onde você indica qual elemento gráfico você quer renomear. Lembre-se: o nome que você quer renomear tem que estar entre aspas ” “.\n\ny para alterar o título do eixo y.\nx para alterar o título do eixo x.\ntitle para alterar o título ou acrescentar um título.\nsubtitle para alterar o subtítulo ou acrescentar um subtítulo.\nfill para alterar o título da legenda referente ao fator colocado no fill.\ncolor para alterar o título da legenda referente ao fator colocado no color.\nshape para alterar o título da legenda referente ao fator colocado no shape.\nsize para alterar o título da legenda referente ao fator colocado no size.\n\n\n#| echo: true\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot(fill=c(\"lightblue\",\"lightgreen\",\"lightpink\"), color=\"brown\")+labs(y=\"Comprimento de pétala\", x=\"Espécies\", title=\"Comparação de comprimento de pétalas\", subtitle = \"Banco de dados iris\")\n\n\n\n\n\n\n\n\n\nAlterando a fonte\nPara alterar o tipo fonte do gráficos é necessário usar o pacote extrafont. Abaixo estará os comandos para instalar o pacote e carrega-lo\n\n# Instalando o pacote extrafont\ninstall.packages(\"extrafont\")\n\n#Carregando o pacote extrafont\nlibrary(extrafont)\n\n#Carregando as fontes presentes no computador\nloadfonts(device=\"all\")\n\nAqui alteramos as fontes através do comando theme() este comando altera elementos temáticos do gráfico, como por exemplo fontes, tamanhos, cor de fundo, entre outros. Neste exemplo colocamons o argumento text = element_text(). Dentro dele vai alguns argumentos:\n\nface é para definir se a fonte estará em itálico (\"italic\"), negrito (\"bold\") ou ambos (\"italic.bold\")\nfamily é para definir se o tipo de fonte. Esse argumento pode ter variações de acordo com sistema operacional do computador. Em sistema windows pode-se utilizar \"TT Times New Roman\", \"Arial\", etc. Enquanto em sistemas Linux e MacOS estarão \"serif\", \"mono\", etc.\nsize é para definir se o tamanho da fonte.\n\nObs.: esses elementos são importantes para garantir boa visualização gráfica e seguir padrões gráficos de publicações ou revistas.\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+labs(y=\"Comprimento de pétala\", x=\"Espécies\")+theme(text = element_text(face=\"bold\", family=\"serif\"))\n\n\n\n\n\n\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+labs(y=\"Comprimento de pétala\", x=\"Espécies\")+theme(text = element_text(face = \"bold.italic\", family=\"mono\", size=16))\n\n\n\n\n\n\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+labs(y=\"Comprimento de pétala\", x=\"Espécies\")+theme(text = element_text(face=\"italic\"))\n\n\n\n\n\n\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+labs(y=\"Comprimento de pétala\", x=\"Espécies\")+theme(axis.text.x = element_text(face=\"italic\"))\n\n\n\n\n\n\n\n\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+labs(y=\"Comprimento de pétala\", x=\"Espécies\", fill=\"Espécies\", title=\"Aqui é o título\")+theme(axis.text.x = element_text(face=\"italic\"), plot.title = element_text(face=\"bold\"))\n\n\n\n\n\n\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+labs(y=\"Comprimento de pétala\", x=\"Espécies\", fill=\"Espécies\", title=\"Aqui é o título\")+theme(axis.text.x = element_text(face=\"italic\"), plot.title = element_text(face=\"bold\"), legend.position = \"none\")\n\n\n\n\n\n\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+labs(y=\"Comprimento de pétala\", x=\"Espécies\", fill=\"Espécies\", title=\"Aqui é o título\")+theme(axis.text.x = element_text(face=\"italic\"), plot.title = element_text(face=\"bold\"), legend.position = \"top\")\n\n\n\n\n\n\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+labs(y=\"Comprimento de pétala\", x=\"Espécies\", fill=\"Espécies\", title=\"Aqui é o título\")+theme(axis.text.x = element_text(face=\"italic\"), plot.title = element_text(face=\"bold\"), legend.position = \"bottom\")\n\n\n\n\n\n\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+labs(y=\"Comprimento de pétala\", x=\"Espécies\", fill=\"Espécies\", title=\"Aqui é o título\")+theme(axis.text.x = element_text(face=\"italic\"), plot.title = element_text(face=\"bold\"), legend.position = \"left\", legend.text = element_text(face=\"italic\"))\n\n\n\n\n\n\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+labs(y=\"Comprimento de pétala\", x=\"Espécies\", fill=\"Espécies\", title=\"Aqui é o título\")+theme(axis.text.x = element_text(face=\"italic\"), plot.title = element_text(face=\"bold\"), legend.position = \"left\", legend.text = element_text(face=\"italic\"))+ geom_text(x = 2.5, y = 4, label = \"Ponto importante\", color = \"red\", face=\"bold\")\n\nWarning in geom_text(x = 2.5, y = 4, label = \"Ponto importante\", color = \"red\",\n: Ignoring unknown parameters: `face`\n\n\n\n\n\n\n\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+labs(y=\"Comprimento de pétala\", x=\"Espécies\", fill=\"Espécies\", title=\"Aqui é o título\")+theme(axis.text.x = element_text(face=\"italic\"), plot.title = element_text(face=\"bold\"), legend.position = \"left\", legend.text = element_text(face=\"italic\"))+ geom_text(x = 2.5, y = 4, label = \"Ponto importante\", color = \"red\")+ annotate(\"vline\", x = 2, xintercept = 2, linetype = \"dashed\", color = \"blue\")\n\nWarning: `geom` must not be \"vline\".\nℹ Please use `geom_vline()` directly instead.\n\n\nWarning in annotate(\"vline\", x = 2, xintercept = 2, linetype = \"dashed\", :\nIgnoring unknown aesthetics: x\n\n\n\n\n\n\n\n\niris%&gt;%ggplot(aes(x=Species, y=Petal.Length, fill=Species))+geom_boxplot()+labs(y=\"Comprimento de pétala\", x=\"Espécies\", fill=\"Espécies\", title=\"Aqui é o título\")+theme(axis.text.x = element_text(face=\"italic\"), plot.title = element_text(face=\"bold\"), legend.position = \"left\", legend.text = element_text(face=\"italic\"))+ geom_text(x = 2.5, y = 4, label = \"Ponto importante\", color = \"red\")+annotate(\"text\", x = 1, y = 3.5, label = \"outro ponto\", color = \"blue\")"
  }
]